basePath: /api/v1
definitions:
  models.Food:
    properties:
      created_at:
        type: string
      food_id:
        type: string
      food_image:
        type: string
      id:
        type: string
      menu_id:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      price:
        type: number
      updated_at:
        type: string
    required:
    - food_image
    - menu_id
    - name
    - price
    type: object
  models.Invoice:
    properties:
      Payment_due_date:
        type: string
      created_at:
        type: string
      id:
        type: string
      invoice_id:
        type: string
      order_id:
        type: string
      payment_method:
        type: string
      payment_status:
        type: string
      updated_at:
        type: string
    required:
    - payment_status
    type: object
  models.Menu:
    properties:
      category:
        type: string
      created_at:
        type: string
      end_date:
        type: string
      food_id:
        type: string
      id:
        type: string
      name:
        type: string
      start_date:
        type: string
      updated_at:
        type: string
    required:
    - category
    - name
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      id:
        type: string
      order_date:
        type: string
      order_id:
        type: string
      table_id:
        type: string
      updated_at:
        type: string
    required:
    - order_date
    - table_id
    type: object
  models.OrderItem:
    properties:
      created_at:
        type: string
      food_id:
        type: string
      id:
        type: string
      order_id:
        type: string
      order_item_id:
        type: string
      quantity:
        type: string
      unit_price:
        type: number
      updated_at:
        type: string
    required:
    - food_id
    - order_id
    - quantity
    - unit_price
    type: object
  models.Table:
    properties:
      created_at:
        type: string
      id:
        type: string
      number_of_guests:
        type: integer
      table_id:
        type: string
      table_number:
        type: integer
      updated_at:
        type: string
    required:
    - number_of_guests
    - table_number
    type: object
  models.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        maxLength: 100
        minLength: 2
        type: string
      id:
        type: string
      last_name:
        maxLength: 100
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
      refresh_token:
        type: string
      token:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /food/{food_id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Food ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Food'
      summary: Show an Food
      tags:
      - accounts
  /invoice/{invoice_id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Invoice'
      summary: Show an Invoice
      tags:
      - accounts
  /menu/{menu_id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Menu'
      summary: Show an Menu
      tags:
      - accounts
  /order-item/{order_item_id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: OrderItem ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderItem'
      summary: Show an OrderItem
      tags:
      - accounts
  /order/{order_id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Show an Order
      tags:
      - accounts
  /table/{table_id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Table'
      summary: Show an Table
      tags:
      - accounts
  /user/{user_id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Show an User
      tags:
      - accounts
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
